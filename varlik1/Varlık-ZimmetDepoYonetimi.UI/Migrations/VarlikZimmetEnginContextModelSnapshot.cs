// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Varlık_ZimmetDepoYonetimi.UI.Models;

#nullable disable

namespace Varlık_ZimmetDepoYonetimi.UI.Migrations
{
    [DbContext(typeof(VarlikZimmetEnginContext))]
    partial class VarlikZimmetEnginContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Calisan", b =>
                {
                    b.Property<int>("CalisanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CalisanID");

                    b.Property<string>("AboneNo")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("AdSoyad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int?>("EkipId")
                        .HasColumnType("int")
                        .HasColumnName("EkipID");

                    b.Property<string>("KullaniciAdi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<string>("Sifre")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SirketId")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CalisanId");

                    b.HasIndex("EkipId");

                    b.HasIndex("RolId");

                    b.HasIndex("SirketId");

                    b.ToTable("Calisan", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<int>("CustomerCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("CustomerCategoryId");

                    b.HasIndex("CustomerGroupId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.CustomerCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("CustomerCategory");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.CustomerContact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerContacts");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.CustomerGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("CustomerGroup");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.DeliveryOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("DeliveryOrders");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.DeliveryOrderitem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("DepoID")
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("double");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryOrderId");

                    b.HasIndex("DepoID");

                    b.HasIndex("UrunId");

                    b.ToTable("DeliveryOrderitems");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Depo", b =>
                {
                    b.Property<int>("DepoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepoID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("DepoAdi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.HasKey("DepoId");

                    b.HasIndex("SirketId");

                    b.ToTable("Depo", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.DepoUrun", b =>
                {
                    b.Property<int>("DepoUrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepoUrunID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Birim")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int")
                        .HasColumnName("DepoID");

                    b.Property<short?>("Miktar")
                        .HasColumnType("smallint");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("DepoUrunId");

                    b.HasIndex("DepoId");

                    b.HasIndex("UrunId");

                    b.ToTable("DepoUrun", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Ekip", b =>
                {
                    b.Property<int>("EkipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EkipID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("EkipAdi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.HasKey("EkipId");

                    b.HasIndex("SirketId");

                    b.ToTable("Ekip", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.KayipCalinti", b =>
                {
                    b.Property<int>("KayipCalintiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KayipCalintiID");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool>("KayipMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.Property<int>("ZimmetId")
                        .HasColumnType("int");

                    b.HasKey("KayipCalintiId");

                    b.HasIndex("UrunId");

                    b.HasIndex("ZimmetId");

                    b.ToTable("KayipCalinti", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ModelID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("ModelAdi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UstModelId")
                        .HasColumnType("int")
                        .HasColumnName("UstModelID");

                    b.HasKey("ModelId");

                    b.HasIndex("UstModelId");

                    b.ToTable("Model", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Musteri", b =>
                {
                    b.Property<int>("MusteriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MusteriID");

                    b.Property<string>("AdSoyad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("MusteriId");

                    b.ToTable("Musteri", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.MusteriZimmet", b =>
                {
                    b.Property<int>("MusteriZimmetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MusteriZimmetID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("MusteriId")
                        .HasColumnType("int")
                        .HasColumnName("MusteriID");

                    b.Property<DateTime?>("TuketmeTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("ZimmetId")
                        .HasColumnType("int")
                        .HasColumnName("ZimmetID");

                    b.HasKey("MusteriZimmetId")
                        .HasName("PK_MusteriZimmet_1");

                    b.HasIndex("MusteriId");

                    b.HasIndex("ZimmetId");

                    b.ToTable("MusteriZimmet", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.MusteriZimmetIptalIade", b =>
                {
                    b.Property<int>("MusteriZimmetİptalIadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MusteriZimmetİptalIadeID");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool?>("IadeMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MusteriZimmetId")
                        .HasColumnType("int")
                        .HasColumnName("MusteriZimmetID");

                    b.Property<DateTime?>("Tarih")
                        .HasMaxLength(50)
                        .HasColumnType("datetime(6)");

                    b.HasKey("MusteriZimmetİptalIadeId");

                    b.HasIndex("MusteriZimmetId");

                    b.ToTable("MusteriZimmetIptalIade", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.ProductGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UrunId");

                    b.ToTable("ProductGroup");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("AfterTaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("BeforeTaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("PurchaseStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaxId");

                    b.HasIndex("VendorId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.PurchaseOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("double");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("UrunId");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("RolAdi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RolId");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("AfterTaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("BeforeTaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TaxId");

                    b.ToTable("SalesOrder");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SalesOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("double");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalesOrderId");

                    b.HasIndex("UrunId");

                    b.ToTable("SalesOrderItem");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Sayfa", b =>
                {
                    b.Property<int>("SayfaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SayfaID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("SayfaAd")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SayfaPath")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SayfaId");

                    b.ToTable("Sayfa", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SayfaYetki", b =>
                {
                    b.Property<int>("SayfaId")
                        .HasColumnType("int")
                        .HasColumnName("SayfaID");

                    b.Property<int>("YetkiId")
                        .HasColumnType("int")
                        .HasColumnName("YetkiID");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("SayfaId", "YetkiId", "RolId");

                    b.HasIndex("RolId");

                    b.HasIndex("YetkiId");

                    b.ToTable("SayfaYetki", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Sirket", b =>
                {
                    b.Property<int>("SirketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("SirketAdi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SirketId");

                    b.ToTable("Sirket", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SirketEkip", b =>
                {
                    b.Property<int>("SirketId")
                        .HasColumnType("int")
                        .HasColumnName("SirketID");

                    b.Property<int>("EkipId")
                        .HasColumnType("int")
                        .HasColumnName("EkipID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("SirketId", "EkipId");

                    b.HasIndex("EkipId");

                    b.ToTable("SirketEkip", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Statu", b =>
                {
                    b.Property<int?>("StatuId")
                        .HasColumnType("int")
                        .HasColumnName("StatuID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<string>("StatuAdi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StatuId");

                    b.ToTable("Statu", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.StokHareket", b =>
                {
                    b.Property<int>("StokHareketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IslemTipi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Kullanici")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("StokHareketId");

                    b.HasIndex("UrunId");

                    b.ToTable("StokHareket");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Tax", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<double?>("Percentage")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.UnitMeasure", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UrunId");

                    b.ToTable("UnitMeasures");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool?>("BarkodluMu")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("GarantiliMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int")
                        .HasColumnName("ModelID");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProductGroupId")
                        .HasColumnType("int");

                    b.Property<int>("StokMiktari")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UrunGuncelFiyat")
                        .HasColumnType("DECIMAL(19, 4)");

                    b.Property<decimal?>("UrunMaliyeti")
                        .HasColumnType("DECIMAL(19, 4)");

                    b.HasKey("UrunId");

                    b.HasIndex("ModelId");

                    b.HasIndex("ProductGroupId");

                    b.HasIndex("UnitMeasureId");

                    b.ToTable("Urun", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.UrunBarkod", b =>
                {
                    b.Property<int>("UrunBarkodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrunBarkodID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("BarkodNo")
                        .HasColumnType("char(36)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("UrunBarkodId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunBarkod", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.UrunDetay", b =>
                {
                    b.Property<int>("UrunDetayId")
                        .HasColumnType("int")
                        .HasColumnName("UrunDetayID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<short?>("Miktar")
                        .HasColumnType("smallint");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("UrunDetayId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunDetay", null, t =>
                        {
                            t.HasTrigger("TRG_KayitEklendi");
                        });
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.UrunStatu", b =>
                {
                    b.Property<int>("UrunStatuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrunStatuID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("StatuId")
                        .HasColumnType("int")
                        .HasColumnName("StatuID");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime");

                    b.Property<int>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.HasKey("UrunStatuId")
                        .HasName("PK_UrunStatu_1");

                    b.HasIndex("StatuId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunStatu", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Vendor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<int>("VendorCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("VendorGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("VendorCategoryId");

                    b.HasIndex("VendorGroupId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.VendorCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("VendorCategories");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.VendorContact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorContacts");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.VendorGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("VendorGroups");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.VwKayipCalintiListesi", b =>
                {
                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("KayipCalintiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KayipCalintiID");

                    b.Property<short?>("Tarih")
                        .HasColumnType("smallint");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.ToTable((string)null);

                    b.ToView("VW_KayipCalintiListesi", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Yetki", b =>
                {
                    b.Property<int>("YetkiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("YetkiID");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("YetkiAdi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("YetkiId");

                    b.ToTable("Yetki", (string)null);
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.YetkiTalep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Yetki")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("YetkiTalepleri");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Zimmet", b =>
                {
                    b.Property<int>("ZimmetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ZimmetID");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int?>("AtananCalisanId")
                        .HasColumnType("int");

                    b.Property<int?>("AtayanCalisanId")
                        .HasColumnType("int")
                        .HasColumnName("AtayanCalisanID");

                    b.Property<int?>("CalisanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IadeTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.Property<DateTime?>("ZimmetBaslangicTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ZimmetBitisTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("ZimmetNumarasi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ZimmetTarihi")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ZimmetId");

                    b.HasIndex("AtananCalisanId");

                    b.HasIndex("AtayanCalisanId");

                    b.HasIndex("CalisanId");

                    b.HasIndex("UrunId");

                    b.ToTable("Zimmet", null, t =>
                        {
                            t.HasTrigger("TRG_ZimmetVerildi");
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Calisan", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Ekip", "Ekip")
                        .WithMany("Calisans")
                        .HasForeignKey("EkipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Calisan_Ekip");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Rol", "Rol")
                        .WithMany("Calisans")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Calisan_Rol");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Sirket", "Sirket")
                        .WithMany("Calisans")
                        .HasForeignKey("SirketId");

                    b.Navigation("Ekip");

                    b.Navigation("Rol");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Customer", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.CustomerCategory", "CustomerCategory")
                        .WithMany()
                        .HasForeignKey("CustomerCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerCategory");

                    b.Navigation("CustomerGroup");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.CustomerContact", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Customer", "Customer")
                        .WithMany("CustomerContactList")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.DeliveryOrder", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.SalesOrder", "SalesOrder")
                        .WithMany()
                        .HasForeignKey("SalesOrderId");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.DeliveryOrderitem", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.DeliveryOrder", "DeliveryOrder")
                        .WithMany("DeliveryOrderItemList")
                        .HasForeignKey("DeliveryOrderId");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoID");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId");

                    b.Navigation("DeliveryOrder");

                    b.Navigation("Depo");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Depo", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Sirket", "Sirket")
                        .WithMany("Depos")
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Depo_Sirket");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.DepoUrun", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Depo", "Depo")
                        .WithMany("DepoUruns")
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_DepoUrun_Depo");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany("DepoUruns")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_DepoUrun_Urun");

                    b.Navigation("Depo");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Ekip", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Sirket", "Sirket")
                        .WithMany("Ekipler")
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Ekip_Sirket");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.KayipCalinti", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany("KayipCalintis")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_KayipCalinti_Urun");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Zimmet", "Zimmet")
                        .WithMany()
                        .HasForeignKey("ZimmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");

                    b.Navigation("Zimmet");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Model", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Model", "UstModel")
                        .WithMany("InverseUstModel")
                        .HasForeignKey("UstModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Model_Model");

                    b.Navigation("UstModel");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.MusteriZimmet", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Musteri", "Musteri")
                        .WithMany("MusteriZimmets")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MusteriZimmet_Musteri");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Zimmet", "Zimmet")
                        .WithMany("MusteriZimmets")
                        .HasForeignKey("ZimmetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MusteriZimmet_Zimmet");

                    b.Navigation("Musteri");

                    b.Navigation("Zimmet");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.MusteriZimmetIptalIade", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.MusteriZimmet", "MusteriZimmet")
                        .WithMany("MusteriZimmetIptalIades")
                        .HasForeignKey("MusteriZimmetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_MusteriZimmetIptalIade_MusteriZimmet");

                    b.Navigation("MusteriZimmet");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.ProductGroup", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", null)
                        .WithMany("UrunGrubu")
                        .HasForeignKey("UrunId");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.PurchaseOrder", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.Navigation("Tax");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItemList")
                        .HasForeignKey("PurchaseOrderId");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SalesOrder", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.Navigation("Customer");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SalesOrderItem", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.SalesOrder", "SalesOrder")
                        .WithMany("SalesOrderItemList")
                        .HasForeignKey("SalesOrderId");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId");

                    b.Navigation("SalesOrder");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SayfaYetki", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Rol", "Rol")
                        .WithMany("SayfaYetkis")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SayfaYetki_Rol");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Sayfa", "Sayfa")
                        .WithMany("SayfaYetkis")
                        .HasForeignKey("SayfaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SayfaYetki_Sayfa");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Yetki", "Yetki")
                        .WithMany("SayfaYetkis")
                        .HasForeignKey("YetkiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SayfaYetki_Yetki");

                    b.Navigation("Rol");

                    b.Navigation("Sayfa");

                    b.Navigation("Yetki");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SirketEkip", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Ekip", "Ekip")
                        .WithMany("SirketEkips")
                        .HasForeignKey("EkipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SirketEkip_Ekip");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Sirket", "Sirket")
                        .WithMany("SirketEkips")
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SirketEkip_Sirket");

                    b.Navigation("Ekip");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.StokHareket", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.UnitMeasure", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", null)
                        .WithMany("UnitMeasures")
                        .HasForeignKey("UrunId");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Model", "Model")
                        .WithMany("Uruns")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Urun_Model");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.ProductGroup", "ProductGroup")
                        .WithMany()
                        .HasForeignKey("ProductGroupId");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.UnitMeasure", "UnitMeasure")
                        .WithMany()
                        .HasForeignKey("UnitMeasureId");

                    b.Navigation("Model");

                    b.Navigation("ProductGroup");

                    b.Navigation("UnitMeasure");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.UrunBarkod", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany("UrunBarkods")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_UrunBarkod_Urun");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.UrunDetay", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany("UrunDetays")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_UrunDetay_Urun");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.UrunStatu", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Statu", "Statu")
                        .WithMany("UrunStatus")
                        .HasForeignKey("StatuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UrunStatu_Statu");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany("UrunStatus")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UrunStatu_Urun");

                    b.Navigation("Statu");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Vendor", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.VendorCategory", "VendorCategory")
                        .WithMany()
                        .HasForeignKey("VendorCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.VendorGroup", "VendorGroup")
                        .WithMany()
                        .HasForeignKey("VendorGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VendorCategory");

                    b.Navigation("VendorGroup");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.VendorContact", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Vendor", "Vendor")
                        .WithMany("VendorContactList")
                        .HasForeignKey("VendorId");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.YetkiTalep", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Zimmet", b =>
                {
                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Calisan", "AtananCalisan")
                        .WithMany("Zimmetler")
                        .HasForeignKey("AtananCalisanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Calisan", "AtayanCalisan")
                        .WithMany("ZimmetAtayanCalisans")
                        .HasForeignKey("AtayanCalisanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Zimmet_Calisan1");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Calisan", null)
                        .WithMany("ZimmetAtananCalisans")
                        .HasForeignKey("CalisanId");

                    b.HasOne("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", "Urun")
                        .WithMany("Zimmets")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Zimmet_Urun");

                    b.Navigation("AtananCalisan");

                    b.Navigation("AtayanCalisan");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Calisan", b =>
                {
                    b.Navigation("ZimmetAtananCalisans");

                    b.Navigation("ZimmetAtayanCalisans");

                    b.Navigation("Zimmetler");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Customer", b =>
                {
                    b.Navigation("CustomerContactList");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.DeliveryOrder", b =>
                {
                    b.Navigation("DeliveryOrderItemList");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Depo", b =>
                {
                    b.Navigation("DepoUruns");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Ekip", b =>
                {
                    b.Navigation("Calisans");

                    b.Navigation("SirketEkips");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Model", b =>
                {
                    b.Navigation("InverseUstModel");

                    b.Navigation("Uruns");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Musteri", b =>
                {
                    b.Navigation("MusteriZimmets");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.MusteriZimmet", b =>
                {
                    b.Navigation("MusteriZimmetIptalIades");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderItemList");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Rol", b =>
                {
                    b.Navigation("Calisans");

                    b.Navigation("SayfaYetkis");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.SalesOrder", b =>
                {
                    b.Navigation("SalesOrderItemList");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Sayfa", b =>
                {
                    b.Navigation("SayfaYetkis");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Sirket", b =>
                {
                    b.Navigation("Calisans");

                    b.Navigation("Depos");

                    b.Navigation("Ekipler");

                    b.Navigation("SirketEkips");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Statu", b =>
                {
                    b.Navigation("UrunStatus");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Urun", b =>
                {
                    b.Navigation("DepoUruns");

                    b.Navigation("KayipCalintis");

                    b.Navigation("UnitMeasures");

                    b.Navigation("UrunBarkods");

                    b.Navigation("UrunDetays");

                    b.Navigation("UrunGrubu");

                    b.Navigation("UrunStatus");

                    b.Navigation("Zimmets");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Vendor", b =>
                {
                    b.Navigation("VendorContactList");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Yetki", b =>
                {
                    b.Navigation("SayfaYetkis");
                });

            modelBuilder.Entity("Varlık_ZimmetDepoYonetimi.UI.Models.Zimmet", b =>
                {
                    b.Navigation("MusteriZimmets");
                });
#pragma warning restore 612, 618
        }
    }
}
