@model SalesOrderViewModel
@{
    ViewData["Title"] = "Yeni Satış Siparişi";
}

<div class="container mt-4">
    @if (!string.IsNullOrEmpty(TempData["Message"] as string))
    {
        <div class="alert alert-danger">
            @TempData["Message"]
        </div>
    }

    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Yeni Satış Siparişi</h3>
        </div>
        <div class="card-body">
            <form asp-action="Create" method="post" id="salesOrderForm">
                <div class="mb-3">
                    <label asp-for="OrderDate" class="form-label">Tarih</label>
                    <input asp-for="OrderDate" type="date" class="form-control" />
                </div>

                <div class="mb-3">
                    <label asp-for="Number" class="form-label">Numara</label>
                    <input asp-for="Number" class="form-control" value="@Model.Number" readonly />
                </div>

                <div class="mb-3">
                    <label asp-for="CustomerId" class="form-label">Müşteri</label>
                    <select asp-for="CustomerId" asp-items="Model.Customers" class="form-select">
                        <option value="">Seçiniz</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label class="form-label">Vergi</label>
                    <select asp-for="TaxId" class="form-select" id="taxSelect" onchange="calculateTotals()">
                        <option value="">Vergi Seçiniz</option>
                        @foreach (var tax in Model.AllTaxes)
                        {
                            <option value="@tax.ID" data-tax="@tax.Percentage.ToString().Replace(",", ".")">@tax.Name - @tax.Percentage %</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="SalesStateId" class="form-label">Durum</label>
                    <select asp-for="SalesStateId" asp-items="Model.SalesState" class="form-select">
                        <option value="">Durum Seçiniz</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="Description" class="form-label">Açıklama</label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                </div>

                <hr />
                <h5>Satış Siparişi Kalemleri</h5>
                <table class="table table-bordered" id="orderItemsTable">
                    <thead>
                        <tr>
                            <th>Ürün</th>
                            <th>Birim Fiyat</th>
                            <th>Miktar</th>
                            <th>Toplam</th>
                            <th>İşlem</th>
                        </tr>
                    </thead>
                    <tbody id="itemsBody">
                        <!-- Satırlar JS ile eklenecek -->
                    </tbody>
                </table>
                <button type="button" onclick="addItem()" class="btn btn-sm btn-success mb-3">+ Kalem Ekle</button>

                <hr />
                <div class="text-end">
                    <div><strong>Ara Toplam:</strong> <span id="beforeTaxAmount">0.00</span></div>
                    <div><strong>Vergi:</strong> <span id="taxAmount">0.00</span></div>
                    <div><strong>Toplam Tutar:</strong> <span id="afterTaxAmount" class="text-success fw-bold">0.00</span></div>

                    <input type="hidden" asp-for="BeforeTaxAmount" id="BeforeTaxAmount" />
                    <input type="hidden" asp-for="TaxAmount" id="TaxAmount" />
                    <input type="hidden" asp-for="AfterTaxAmount" id="AfterTaxAmount" />
                </div>

                <br />
                <button type="submit" class="btn btn-primary">Kaydet</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Controller'dan tam ve doğru şekilde JSON olarak gelen ürünler:
        const products = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.ProductsJson));

        let itemIndex = 0;

        function addItem() {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>
                    <select name="SalesOrderItems[${itemIndex}].UrunId" class="form-control product-select" onchange="onProductChange(this)">
                        <option value="">Ürün Seçiniz</option>
                        ${products.map(p => `<option value="${p.Id}">${p.ModelAdi}</option>`).join('')}
                    </select>
                </td>
                <td><input name="SalesOrderItems[${itemIndex}].UnitPrice" class="form-control unit-price" readonly /></td>
                <td><input name="SalesOrderItems[${itemIndex}].Quantity" class="form-control quantity" value="1" min="1" type="number" oninput="updateRowTotal(this)" /></td>
                <td><input name="SalesOrderItems[${itemIndex}].Total" class="form-control total" readonly /></td>
                <td><button type="button" onclick="removeItem(this)" class="btn btn-danger btn-sm">X</button></td>
            `;
            document.getElementById('itemsBody').appendChild(row);
            itemIndex++;
        }

        function onProductChange(select) {
            const selectedProductId = parseInt(select.value);
            const product = products.find(p => p.Id === selectedProductId);

            const row = select.closest('tr');
            if (product) {
                row.querySelector('.unit-price').value = product.UrunGuncelFiyat.toFixed(2);
                row.querySelector('.quantity').value = 1;
                updateRowTotal(row.querySelector('.quantity'));
            } else {
                row.querySelector('.unit-price').value = '';
                row.querySelector('.total').value = '';
            }
            calculateTotals();
        }

        function updateRowTotal(quantityInput) {
            const row = quantityInput.closest('tr');
            const unitPrice = parseFloat(row.querySelector('.unit-price').value) || 0;
            const quantity = parseFloat(quantityInput.value) || 0;
            const total = unitPrice * quantity;

            row.querySelector('.total').value = total.toFixed(2);
            calculateTotals();
        }

        function removeItem(button) {
            button.closest('tr').remove();
            calculateTotals();
        }

                function calculateTotals() {
            let subtotal = 0;

            // Tüm satırların toplamlarını topla
            document.querySelectorAll('#itemsBody tr').forEach(row => {
                const total = parseFloat(row.querySelector('.total').value.replace(',', '.')) || 0;
                subtotal += total;
            });

            const taxSelect = document.getElementById('taxSelect');
            let taxRate = 0;

            if (taxSelect && taxSelect.selectedIndex !== -1) {
                const selectedOption = taxSelect.options[taxSelect.selectedIndex];
                const rawTax = selectedOption.getAttribute('data-tax');

                // Virgülü noktaya çevir
                taxRate = parseFloat(rawTax.replace(',', '.')) || 0;
            }


            const taxAmount = subtotal * taxRate;
            const afterTaxAmount = subtotal + taxAmount;

            document.getElementById('beforeTaxAmount').innerText = subtotal.toFixed(2);
            document.getElementById('taxAmount').innerText = taxAmount.toFixed(2);
            document.getElementById('afterTaxAmount').innerText = afterTaxAmount.toFixed(2);

            document.getElementById('BeforeTaxAmount').value = subtotal.toFixed(2);
            document.getElementById('TaxAmount').value = taxAmount.toFixed(2);
            document.getElementById('AfterTaxAmount').value = afterTaxAmount.toFixed(2);
        }

        document.addEventListener('DOMContentLoaded', () => {
            addItem(); // En az bir kalem satırı otomatik ekle
            calculateTotals();
            document.getElementById('taxSelect').addEventListener('change', calculateTotals);
        });
    </script>
}
